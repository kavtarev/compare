// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: example.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tiny struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	String_       string                 `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tiny) Reset() {
	*x = Tiny{}
	mi := &file_example_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tiny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tiny) ProtoMessage() {}

func (x *Tiny) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tiny.ProtoReflect.Descriptor instead.
func (*Tiny) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

func (x *Tiny) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

type Small struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	String_       string                 `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
	Int           int32                  `protobuf:"varint,2,opt,name=int,proto3" json:"int,omitempty"`
	Strings       []string               `protobuf:"bytes,3,rep,name=strings,proto3" json:"strings,omitempty"`
	Bool          bool                   `protobuf:"varint,4,opt,name=bool,proto3" json:"bool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Small) Reset() {
	*x = Small{}
	mi := &file_example_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Small) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Small) ProtoMessage() {}

func (x *Small) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Small.ProtoReflect.Descriptor instead.
func (*Small) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

func (x *Small) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *Small) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *Small) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *Small) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

type SmallNumbers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Age           int32                  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Interests     []int32                `protobuf:"varint,3,rep,packed,name=interests,proto3" json:"interests,omitempty"` // packed ускоряет обработку чисел!
	Flag          bool                   `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SmallNumbers) Reset() {
	*x = SmallNumbers{}
	mi := &file_example_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SmallNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallNumbers) ProtoMessage() {}

func (x *SmallNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallNumbers.ProtoReflect.Descriptor instead.
func (*SmallNumbers) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{2}
}

func (x *SmallNumbers) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SmallNumbers) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *SmallNumbers) GetInterests() []int32 {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *SmallNumbers) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

type Medium struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	String1       string                 `protobuf:"bytes,2,opt,name=string1,proto3" json:"string1,omitempty"`
	String2       string                 `protobuf:"bytes,3,opt,name=string2,proto3" json:"string2,omitempty"`
	String3       string                 `protobuf:"bytes,4,opt,name=string3,proto3" json:"string3,omitempty"`
	Bool1         bool                   `protobuf:"varint,5,opt,name=bool1,proto3" json:"bool1,omitempty"`
	Bool2         bool                   `protobuf:"varint,6,opt,name=bool2,proto3" json:"bool2,omitempty"`
	Bool3         bool                   `protobuf:"varint,7,opt,name=bool3,proto3" json:"bool3,omitempty"`
	Int1          int32                  `protobuf:"varint,8,opt,name=int1,proto3" json:"int1,omitempty"`
	Int2          int32                  `protobuf:"varint,9,opt,name=int2,proto3" json:"int2,omitempty"`
	Int3          int32                  `protobuf:"varint,10,opt,name=int3,proto3" json:"int3,omitempty"`
	Small1        *Small                 `protobuf:"bytes,11,opt,name=small1,proto3" json:"small1,omitempty"`
	Small2        *Small                 `protobuf:"bytes,12,opt,name=small2,proto3" json:"small2,omitempty"`
	Small3        *Small                 `protobuf:"bytes,13,opt,name=small3,proto3" json:"small3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Medium) Reset() {
	*x = Medium{}
	mi := &file_example_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Medium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medium) ProtoMessage() {}

func (x *Medium) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medium.ProtoReflect.Descriptor instead.
func (*Medium) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{3}
}

func (x *Medium) GetString1() string {
	if x != nil {
		return x.String1
	}
	return ""
}

func (x *Medium) GetString2() string {
	if x != nil {
		return x.String2
	}
	return ""
}

func (x *Medium) GetString3() string {
	if x != nil {
		return x.String3
	}
	return ""
}

func (x *Medium) GetBool1() bool {
	if x != nil {
		return x.Bool1
	}
	return false
}

func (x *Medium) GetBool2() bool {
	if x != nil {
		return x.Bool2
	}
	return false
}

func (x *Medium) GetBool3() bool {
	if x != nil {
		return x.Bool3
	}
	return false
}

func (x *Medium) GetInt1() int32 {
	if x != nil {
		return x.Int1
	}
	return 0
}

func (x *Medium) GetInt2() int32 {
	if x != nil {
		return x.Int2
	}
	return 0
}

func (x *Medium) GetInt3() int32 {
	if x != nil {
		return x.Int3
	}
	return 0
}

func (x *Medium) GetSmall1() *Small {
	if x != nil {
		return x.Small1
	}
	return nil
}

func (x *Medium) GetSmall2() *Small {
	if x != nil {
		return x.Small2
	}
	return nil
}

func (x *Medium) GetSmall3() *Small {
	if x != nil {
		return x.Small3
	}
	return nil
}

type Large struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	String1       string                 `protobuf:"bytes,2,opt,name=string1,proto3" json:"string1,omitempty"`
	String2       string                 `protobuf:"bytes,3,opt,name=string2,proto3" json:"string2,omitempty"`
	String3       string                 `protobuf:"bytes,4,opt,name=string3,proto3" json:"string3,omitempty"`
	Bool1         bool                   `protobuf:"varint,5,opt,name=bool1,proto3" json:"bool1,omitempty"`
	Bool2         bool                   `protobuf:"varint,6,opt,name=bool2,proto3" json:"bool2,omitempty"`
	Bool3         bool                   `protobuf:"varint,7,opt,name=bool3,proto3" json:"bool3,omitempty"`
	Int1          int32                  `protobuf:"varint,8,opt,name=int1,proto3" json:"int1,omitempty"`
	Int2          int32                  `protobuf:"varint,9,opt,name=int2,proto3" json:"int2,omitempty"`
	Int3          int32                  `protobuf:"varint,10,opt,name=int3,proto3" json:"int3,omitempty"`
	Small1        *Small                 `protobuf:"bytes,11,opt,name=small1,proto3" json:"small1,omitempty"`
	Small2        *Small                 `protobuf:"bytes,12,opt,name=small2,proto3" json:"small2,omitempty"`
	Small3        *Small                 `protobuf:"bytes,13,opt,name=small3,proto3" json:"small3,omitempty"`
	Medium1       *Medium                `protobuf:"bytes,14,opt,name=medium1,proto3" json:"medium1,omitempty"`
	Medium2       *Medium                `protobuf:"bytes,15,opt,name=medium2,proto3" json:"medium2,omitempty"`
	Medium3       *Medium                `protobuf:"bytes,16,opt,name=medium3,proto3" json:"medium3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Large) Reset() {
	*x = Large{}
	mi := &file_example_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Large) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Large) ProtoMessage() {}

func (x *Large) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Large.ProtoReflect.Descriptor instead.
func (*Large) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{4}
}

func (x *Large) GetString1() string {
	if x != nil {
		return x.String1
	}
	return ""
}

func (x *Large) GetString2() string {
	if x != nil {
		return x.String2
	}
	return ""
}

func (x *Large) GetString3() string {
	if x != nil {
		return x.String3
	}
	return ""
}

func (x *Large) GetBool1() bool {
	if x != nil {
		return x.Bool1
	}
	return false
}

func (x *Large) GetBool2() bool {
	if x != nil {
		return x.Bool2
	}
	return false
}

func (x *Large) GetBool3() bool {
	if x != nil {
		return x.Bool3
	}
	return false
}

func (x *Large) GetInt1() int32 {
	if x != nil {
		return x.Int1
	}
	return 0
}

func (x *Large) GetInt2() int32 {
	if x != nil {
		return x.Int2
	}
	return 0
}

func (x *Large) GetInt3() int32 {
	if x != nil {
		return x.Int3
	}
	return 0
}

func (x *Large) GetSmall1() *Small {
	if x != nil {
		return x.Small1
	}
	return nil
}

func (x *Large) GetSmall2() *Small {
	if x != nil {
		return x.Small2
	}
	return nil
}

func (x *Large) GetSmall3() *Small {
	if x != nil {
		return x.Small3
	}
	return nil
}

func (x *Large) GetMedium1() *Medium {
	if x != nil {
		return x.Medium1
	}
	return nil
}

func (x *Large) GetMedium2() *Medium {
	if x != nil {
		return x.Medium2
	}
	return nil
}

func (x *Large) GetMedium3() *Medium {
	if x != nil {
		return x.Medium3
	}
	return nil
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x22, 0x1e, 0x0a, 0x04, 0x74, 0x69,
	0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x5f, 0x0a, 0x05, 0x73, 0x6d,
	0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x22, 0x67, 0x0a, 0x0d, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x22, 0xd2, 0x02, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x33, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f,
	0x6f, 0x6c, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f,
	0x6c, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69,
	0x6e, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x33, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x33, 0x12, 0x28, 0x0a, 0x06, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x06, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x31, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70,
	0x62, 0x2e, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x32, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x52, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x33, 0x22, 0xd8, 0x03, 0x0a, 0x05, 0x6c, 0x61,
	0x72, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x33, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f,
	0x6f, 0x6c, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x32, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x74, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x33, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x52, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x31, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x32, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x33, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x33, 0x12, 0x2b, 0x0a,
	0x07, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x75,
	0x6d, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x31, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x07,
	0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x32, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x75,
	0x6d, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x70, 0x62, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x07, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x33, 0x42, 0x0f, 0x5a, 0x0d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData = file_example_proto_rawDesc
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_proto_rawDescData)
	})
	return file_example_proto_rawDescData
}

var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_example_proto_goTypes = []any{
	(*Tiny)(nil),         // 0: examplepb.tiny
	(*Small)(nil),        // 1: examplepb.small
	(*SmallNumbers)(nil), // 2: examplepb.small_numbers
	(*Medium)(nil),       // 3: examplepb.medium
	(*Large)(nil),        // 4: examplepb.large
}
var file_example_proto_depIdxs = []int32{
	1, // 0: examplepb.medium.small1:type_name -> examplepb.small
	1, // 1: examplepb.medium.small2:type_name -> examplepb.small
	1, // 2: examplepb.medium.small3:type_name -> examplepb.small
	1, // 3: examplepb.large.small1:type_name -> examplepb.small
	1, // 4: examplepb.large.small2:type_name -> examplepb.small
	1, // 5: examplepb.large.small3:type_name -> examplepb.small
	3, // 6: examplepb.large.medium1:type_name -> examplepb.medium
	3, // 7: examplepb.large.medium2:type_name -> examplepb.medium
	3, // 8: examplepb.large.medium3:type_name -> examplepb.medium
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_rawDesc = nil
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}
